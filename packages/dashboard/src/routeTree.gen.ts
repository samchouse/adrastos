/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardRouteImport } from './routes/dashboard/route'
import { Route as LayoutRouteImport } from './routes/_layout/route'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as LayoutIndexImport } from './routes/_layout/index'
import { Route as DashboardProfileImport } from './routes/dashboard/profile'
import { Route as LayoutRegisterImport } from './routes/_layout/register'
import { Route as LayoutLoginImport } from './routes/_layout/login'
import { Route as DashboardTeamsTeamIdRouteImport } from './routes/dashboard/teams/$teamId/route'
import { Route as DashboardProjectsProjectIdRouteImport } from './routes/dashboard/projects/$projectId/route'
import { Route as DashboardTeamsTeamIdIndexImport } from './routes/dashboard/teams/$teamId/index'
import { Route as DashboardTeamsTeamIdSettingsImport } from './routes/dashboard/teams/$teamId/settings'
import { Route as DashboardProjectsProjectIdStorageImport } from './routes/dashboard/projects/$projectId/storage'
import { Route as DashboardProjectsProjectIdSettingsImport } from './routes/dashboard/projects/$projectId/settings'
import { Route as DashboardProjectsProjectIdAuthImport } from './routes/dashboard/projects/$projectId/auth'
import { Route as DashboardProjectsProjectIdTablesRouteImport } from './routes/dashboard/projects/$projectId/tables/route'
import { Route as DashboardProjectsProjectIdTablesTableIdImport } from './routes/dashboard/projects/$projectId/tables/$tableId'

// Create/Update Routes

const DashboardRouteRoute = DashboardRouteImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const LayoutRouteRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  path: '/',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const LayoutIndexRoute = LayoutIndexImport.update({
  path: '/',
  getParentRoute: () => LayoutRouteRoute,
} as any)

const DashboardProfileRoute = DashboardProfileImport.update({
  path: '/profile',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const LayoutRegisterRoute = LayoutRegisterImport.update({
  path: '/register',
  getParentRoute: () => LayoutRouteRoute,
} as any)

const LayoutLoginRoute = LayoutLoginImport.update({
  path: '/login',
  getParentRoute: () => LayoutRouteRoute,
} as any)

const DashboardTeamsTeamIdRouteRoute = DashboardTeamsTeamIdRouteImport.update({
  path: '/teams/$teamId',
  getParentRoute: () => DashboardRouteRoute,
} as any)

const DashboardProjectsProjectIdRouteRoute =
  DashboardProjectsProjectIdRouteImport.update({
    path: '/projects/$projectId',
    getParentRoute: () => DashboardRouteRoute,
  } as any)

const DashboardTeamsTeamIdIndexRoute = DashboardTeamsTeamIdIndexImport.update({
  path: '/',
  getParentRoute: () => DashboardTeamsTeamIdRouteRoute,
} as any)

const DashboardTeamsTeamIdSettingsRoute =
  DashboardTeamsTeamIdSettingsImport.update({
    path: '/settings',
    getParentRoute: () => DashboardTeamsTeamIdRouteRoute,
  } as any)

const DashboardProjectsProjectIdStorageRoute =
  DashboardProjectsProjectIdStorageImport.update({
    path: '/storage',
    getParentRoute: () => DashboardProjectsProjectIdRouteRoute,
  } as any)

const DashboardProjectsProjectIdSettingsRoute =
  DashboardProjectsProjectIdSettingsImport.update({
    path: '/settings',
    getParentRoute: () => DashboardProjectsProjectIdRouteRoute,
  } as any)

const DashboardProjectsProjectIdAuthRoute =
  DashboardProjectsProjectIdAuthImport.update({
    path: '/auth',
    getParentRoute: () => DashboardProjectsProjectIdRouteRoute,
  } as any)

const DashboardProjectsProjectIdTablesRouteRoute =
  DashboardProjectsProjectIdTablesRouteImport.update({
    path: '/tables',
    getParentRoute: () => DashboardProjectsProjectIdRouteRoute,
  } as any)

const DashboardProjectsProjectIdTablesTableIdRoute =
  DashboardProjectsProjectIdTablesTableIdImport.update({
    path: '/$tableId',
    getParentRoute: () => DashboardProjectsProjectIdTablesRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRoute
    }
    '/_layout/login': {
      id: '/_layout/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LayoutLoginImport
      parentRoute: typeof LayoutRouteImport
    }
    '/_layout/register': {
      id: '/_layout/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof LayoutRegisterImport
      parentRoute: typeof LayoutRouteImport
    }
    '/dashboard/profile': {
      id: '/dashboard/profile'
      path: '/profile'
      fullPath: '/dashboard/profile'
      preLoaderRoute: typeof DashboardProfileImport
      parentRoute: typeof DashboardRouteImport
    }
    '/_layout/': {
      id: '/_layout/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LayoutIndexImport
      parentRoute: typeof LayoutRouteImport
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/'
      fullPath: '/dashboard/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/projects/$projectId': {
      id: '/dashboard/projects/$projectId'
      path: '/projects/$projectId'
      fullPath: '/dashboard/projects/$projectId'
      preLoaderRoute: typeof DashboardProjectsProjectIdRouteImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/teams/$teamId': {
      id: '/dashboard/teams/$teamId'
      path: '/teams/$teamId'
      fullPath: '/dashboard/teams/$teamId'
      preLoaderRoute: typeof DashboardTeamsTeamIdRouteImport
      parentRoute: typeof DashboardRouteImport
    }
    '/dashboard/projects/$projectId/tables': {
      id: '/dashboard/projects/$projectId/tables'
      path: '/tables'
      fullPath: '/dashboard/projects/$projectId/tables'
      preLoaderRoute: typeof DashboardProjectsProjectIdTablesRouteImport
      parentRoute: typeof DashboardProjectsProjectIdRouteImport
    }
    '/dashboard/projects/$projectId/auth': {
      id: '/dashboard/projects/$projectId/auth'
      path: '/auth'
      fullPath: '/dashboard/projects/$projectId/auth'
      preLoaderRoute: typeof DashboardProjectsProjectIdAuthImport
      parentRoute: typeof DashboardProjectsProjectIdRouteImport
    }
    '/dashboard/projects/$projectId/settings': {
      id: '/dashboard/projects/$projectId/settings'
      path: '/settings'
      fullPath: '/dashboard/projects/$projectId/settings'
      preLoaderRoute: typeof DashboardProjectsProjectIdSettingsImport
      parentRoute: typeof DashboardProjectsProjectIdRouteImport
    }
    '/dashboard/projects/$projectId/storage': {
      id: '/dashboard/projects/$projectId/storage'
      path: '/storage'
      fullPath: '/dashboard/projects/$projectId/storage'
      preLoaderRoute: typeof DashboardProjectsProjectIdStorageImport
      parentRoute: typeof DashboardProjectsProjectIdRouteImport
    }
    '/dashboard/teams/$teamId/settings': {
      id: '/dashboard/teams/$teamId/settings'
      path: '/settings'
      fullPath: '/dashboard/teams/$teamId/settings'
      preLoaderRoute: typeof DashboardTeamsTeamIdSettingsImport
      parentRoute: typeof DashboardTeamsTeamIdRouteImport
    }
    '/dashboard/teams/$teamId/': {
      id: '/dashboard/teams/$teamId/'
      path: '/'
      fullPath: '/dashboard/teams/$teamId/'
      preLoaderRoute: typeof DashboardTeamsTeamIdIndexImport
      parentRoute: typeof DashboardTeamsTeamIdRouteImport
    }
    '/dashboard/projects/$projectId/tables/$tableId': {
      id: '/dashboard/projects/$projectId/tables/$tableId'
      path: '/$tableId'
      fullPath: '/dashboard/projects/$projectId/tables/$tableId'
      preLoaderRoute: typeof DashboardProjectsProjectIdTablesTableIdImport
      parentRoute: typeof DashboardProjectsProjectIdTablesRouteImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  LayoutRouteRoute: LayoutRouteRoute.addChildren({
    LayoutLoginRoute,
    LayoutRegisterRoute,
    LayoutIndexRoute,
  }),
  DashboardRouteRoute: DashboardRouteRoute.addChildren({
    DashboardProfileRoute,
    DashboardIndexRoute,
    DashboardProjectsProjectIdRouteRoute:
      DashboardProjectsProjectIdRouteRoute.addChildren({
        DashboardProjectsProjectIdTablesRouteRoute:
          DashboardProjectsProjectIdTablesRouteRoute.addChildren({
            DashboardProjectsProjectIdTablesTableIdRoute,
          }),
        DashboardProjectsProjectIdAuthRoute,
        DashboardProjectsProjectIdSettingsRoute,
        DashboardProjectsProjectIdStorageRoute,
      }),
    DashboardTeamsTeamIdRouteRoute: DashboardTeamsTeamIdRouteRoute.addChildren({
      DashboardTeamsTeamIdSettingsRoute,
      DashboardTeamsTeamIdIndexRoute,
    }),
  }),
})

/* prettier-ignore-end */
