// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginIndexImport } from './routes/login/index'

// Create Virtual Routes

const SignupLazyImport = createFileRoute('/signup')()
const HomeLazyImport = createFileRoute('/home')()
const DashboardRouteLazyImport = createFileRoute('/dashboard')()
const IndexLazyImport = createFileRoute('/')()
const DashboardIndexLazyImport = createFileRoute('/dashboard/')()
const DashboardSettingsLazyImport = createFileRoute('/dashboard/settings')()
const DashboardProfileLazyImport = createFileRoute('/dashboard/profile')()
const DashboardAuthLazyImport = createFileRoute('/dashboard/auth')()
const DashboardTablesRouteLazyImport = createFileRoute('/dashboard/tables')()
const DashboardTablesTableIdLazyImport = createFileRoute(
  '/dashboard/tables/$tableId',
)()

// Create/Update Routes

const SignupLazyRoute = SignupLazyImport.update({
  path: '/signup',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/signup.lazy').then((d) => d.Route))

const HomeLazyRoute = HomeLazyImport.update({
  path: '/home',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/home.lazy').then((d) => d.Route))

const DashboardRouteLazyRoute = DashboardRouteLazyImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/dashboard/route.lazy').then((d) => d.Route),
)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const DashboardIndexLazyRoute = DashboardIndexLazyImport.update({
  path: '/',
  getParentRoute: () => DashboardRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/dashboard/index.lazy').then((d) => d.Route),
)

const LoginIndexRoute = LoginIndexImport.update({
  path: '/login/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/login/index.lazy').then((d) => d.Route))

const DashboardSettingsLazyRoute = DashboardSettingsLazyImport.update({
  path: '/settings',
  getParentRoute: () => DashboardRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/dashboard/settings.lazy').then((d) => d.Route),
)

const DashboardProfileLazyRoute = DashboardProfileLazyImport.update({
  path: '/profile',
  getParentRoute: () => DashboardRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/dashboard/profile.lazy').then((d) => d.Route),
)

const DashboardAuthLazyRoute = DashboardAuthLazyImport.update({
  path: '/auth',
  getParentRoute: () => DashboardRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/dashboard/auth.lazy').then((d) => d.Route),
)

const DashboardTablesRouteLazyRoute = DashboardTablesRouteLazyImport.update({
  path: '/tables',
  getParentRoute: () => DashboardRouteLazyRoute,
} as any).lazy(() =>
  import('./routes/dashboard/tables/route.lazy').then((d) => d.Route),
)

const DashboardTablesTableIdLazyRoute = DashboardTablesTableIdLazyImport.update(
  {
    path: '/$tableId',
    getParentRoute: () => DashboardTablesRouteLazyRoute,
  } as any,
).lazy(() =>
  import('./routes/dashboard/tables/$tableId.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      preLoaderRoute: typeof DashboardRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      preLoaderRoute: typeof HomeLazyImport
      parentRoute: typeof rootRoute
    }
    '/signup': {
      preLoaderRoute: typeof SignupLazyImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/tables': {
      preLoaderRoute: typeof DashboardTablesRouteLazyImport
      parentRoute: typeof DashboardRouteLazyImport
    }
    '/dashboard/auth': {
      preLoaderRoute: typeof DashboardAuthLazyImport
      parentRoute: typeof DashboardRouteLazyImport
    }
    '/dashboard/profile': {
      preLoaderRoute: typeof DashboardProfileLazyImport
      parentRoute: typeof DashboardRouteLazyImport
    }
    '/dashboard/settings': {
      preLoaderRoute: typeof DashboardSettingsLazyImport
      parentRoute: typeof DashboardRouteLazyImport
    }
    '/login/': {
      preLoaderRoute: typeof LoginIndexImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      preLoaderRoute: typeof DashboardIndexLazyImport
      parentRoute: typeof DashboardRouteLazyImport
    }
    '/dashboard/tables/$tableId': {
      preLoaderRoute: typeof DashboardTablesTableIdLazyImport
      parentRoute: typeof DashboardTablesRouteLazyImport
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  DashboardRouteLazyRoute.addChildren([
    DashboardTablesRouteLazyRoute.addChildren([
      DashboardTablesTableIdLazyRoute,
    ]),
    DashboardAuthLazyRoute,
    DashboardProfileLazyRoute,
    DashboardSettingsLazyRoute,
    DashboardIndexLazyRoute,
  ]),
  HomeLazyRoute,
  SignupLazyRoute,
  LoginIndexRoute,
])
