name: CD

on:
  push:
    tags: ["*"]
    branches: [main]
  pull_request:
    types: [opened, closed]
  issue_comment:
    types: [edited]

jobs:
  staging-start:
    name: Staging Start
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'opened'

    steps:
      - name: Create comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## Backend Staging
            - [ ] Deploy this PR

  staging:
    name: Staging
    runs-on: ubuntu-latest
    environment: Backend Preview
    if: github.event_name == 'issue_comment' && github.event.issue.pull_request && github.event.comment.user.id == 41898282 && contains(github.event.comment.body, '- [x] Deploy this PR') && github.event.issue.state == 'open'

    permissions:
      contents: read
      packages: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v3
      - run: git fetch origin pull/${{ github.event.issue.number }}/head
      - run: git checkout FETCH_HEAD

      - name: Update comment
        uses: peter-evans/create-or-update-comment@v3
        with:
          comment-id: ${{ github.event.comment.id }}
          edit-mode: replace
          body: |
            ## Backend Staging
            Status: **[DEPLOYING](https://github.com/Xenfo/adrastos/actions/runs/${{ github.run_id }}) :hourglass:**
            - [ ] Deploy this PR

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: Xenfo
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v2

      - uses: actions/setup-node@v4
        with:
          cache: yarn
          node-version: latest

      - id: node
        run: |
          yarn install
          cd packages/lib
          yarn build
          cd ../dashboard
          yarn build

      - uses: dtolnay/rust-toolchain@nightly
      - id: rust
        run: cargo build --release

      - name: Build and push the app image
        uses: docker/build-push-action@v4
        id: app
        with:
          push: true
          context: .
          file: .github/deploy/Dockerfile.app
          tags: ghcr.io/xenfo/adrastos-app:staging-pr-${{ github.event.issue.number }}

      - name: Build and push the worker image
        uses: docker/build-push-action@v4
        id: emails
        with:
          push: true
          file: .github/deploy/Dockerfile.emails
          tags: ghcr.io/xenfo/adrastos-emails:staging-pr-${{ github.event.issue.number }}

      - name: Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci
          version: 1.58.2

      - name: Deploy to VPS
        id: ssh
        run: |
          ssh -o StrictHostKeyChecking=no root@arch "
            cd /home/sam/Documents/deployments/personal/adrastos
            ./scripts/staging.sh cou ${{ github.event.issue.number }}
          "
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update comment
        uses: peter-evans/create-or-update-comment@v3
        if: always()
        with:
          comment-id: ${{ github.event.comment.id }}
          edit-mode: replace
          body: |
            ## Backend Staging
            Status: **[${{ (!contains(steps.*.conclusion, 'failure') && !contains(steps.*.conclusion, 'cancelled')) && 'SUCCEEDED' || !contains(steps.*.conclusion, 'cancelled') && 'FAILED' || 'CANCELLED' }}](https://github.com/Xenfo/adrastos/actions/runs/${{ github.run_id }}) ${{ (!contains(steps.*.conclusion, 'failure') && !contains(steps.*.conclusion, 'cancelled')) && ':white_check_mark:' || !contains(steps.*.conclusion, 'cancelled') && ':x:' || ':grey_question:' }}**
            - [ ] Deploy this PR

  staging-end:
    name: Staging End
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' && github.event.action == 'closed'

    steps:
      - name: Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci
          version: 1.58.2

      - name: Remove from VPS
        run: |
          ssh -o StrictHostKeyChecking=no root@arch "
            cd /home/sam/Documents/deployments/personal/adrastos
            ./scripts/staging.sh destroy ${{ github.event.pull_request.number }}
          "
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Remove from Cloudflare
        run: |
          export RECORD_ID=$(curl -s "https://api.cloudflare.com/client/v4/zones/${{ secrets.CF_ZONE_ID }}/dns_records?name=adi-pr-${{ github.event.pull_request.number }}.xenfo.dev" \
            -H "Authorization: Bearer ${{ secrets.CF_TOKEN }}" \
            -H "Content-Type:application/json" \
          | jq -r '.result[0].id')
          curl -s -o /dev/null -X DELETE "https://api.cloudflare.com/client/v4/zones/${{ secrets.CF_ZONE_ID }}/dns_records/$RECORD_ID" \
            -H "Authorization: Bearer ${{ secrets.CF_TOKEN }}" \
            -H "Content-Type:application/json"

  git:
    name: Git
    runs-on: ubuntu-latest
    environment: Backend Production
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: Xenfo
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v2

      - uses: actions/setup-node@v4
        with:
          cache: yarn
          node-version: latest

      - id: node
        run: |
          yarn install
          cd packages/lib
          yarn build
          cd ../dashboard
          yarn build

      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo build --release

      - name: Build and push the app image
        uses: docker/build-push-action@v4
        with:
          push: true
          context: .
          file: .github/deploy/Dockerfile.app
          tags: ghcr.io/xenfo/adrastos-app:git

      - name: Build and push the worker image
        uses: docker/build-push-action@v4
        with:
          push: true
          file: .github/deploy/Dockerfile.emails
          tags: ghcr.io/xenfo/adrastos-emails:git

      - name: Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TS_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TS_OAUTH_SECRET }}
          tags: tag:ci
          version: 1.58.2

      - name: Deploy to VPS
        run: |
          ssh -o StrictHostKeyChecking=no sam@arch "
            cd /home/sam/Documents/deployments/personal/adrastos
            git pull
            docker compose --profile deploy up -d
            docker rmi \$(docker images -q --filter \"reference=ghcr.io/xenfo/adrastos-*:*\") || true
          "
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/tags/v*'

    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - run: |
          echo "data=$(echo ${{ github.ref_name }} | sed 's/v//')" >> $GITHUB_OUTPUT
        id: version

      - uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: Xenfo
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: docker/setup-buildx-action@v2

      - uses: actions/setup-node@v4
        with:
          cache: yarn
          node-version: latest

      - id: node
        run: |
          yarn install
          cd packages/lib
          yarn build
          cd ../dashboard
          yarn build

      - uses: dtolnay/rust-toolchain@nightly
      - run: cargo install --git https://github.com/SanchithHegde/changelog-gh-usernames
      - run: cargo build --release

      - name: Build and push the app image
        uses: docker/build-push-action@v4
        with:
          push: true
          context: .
          file: .github/deploy/Dockerfile.app
          tags: ghcr.io/xenfo/adrastos-app:latest,ghcr.io/xenfo/adrastos-app:${{ steps.version.outputs.data }}

      - name: Build and push the worker image
        uses: docker/build-push-action@v4
        with:
          push: true
          file: .github/deploy/Dockerfile.emails
          tags: ghcr.io/xenfo/adrastos-emails:latest,ghcr.io/xenfo/adrastos-emails:${{ steps.version.outputs.data }}

      - name: Generate changelog
        uses: orhun/git-cliff-action@v2
        with:
          config: .github/deploy/cliff.toml
          args: -l
        env:
          OUTPUT: CHANGELOG.md
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          name: ${{ github.ref_name }}
          bodyFile: CHANGELOG.md
